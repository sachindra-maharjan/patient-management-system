version: "3.8"

services:
  patient-service:
    container_name: patient-service
    image: patient-service:latest
    ports:
      - "4000:4000" # API is exposed through API Gateway only
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-service-db:5432/patientdb
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      BILLING_SERVICE_HOST: billing-service
      BILLING_SERVICE_PORT: 9000
    networks:
      - internal
    depends_on:
      - patient-service-db
      - billing-service
      - kafka
  billing-service:
    image: billing-service:latest
    container_name: billing-service
    ports:
      - "4001:4001"
      - "9000:9000"
    networks:
      - internal
  patient-service-db:
    container_name: patient-service-db
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: patientdb
    networks:
      - internal
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  analytics-service:
    container_name: analytics-service
    image: analytics-service:latest
    ports:
      - "4002:4002"
    networks:
      - internal
    depends_on:
      - kafka
  
  notification-service:
    container_name: notification-service
    image: notification-service:latest
    ports:
      - "4003:4003"
    networks:
      - internal
    depends_on:
      - kafka
  
  auth-service:
    container_name: auth-service
    image: auth-service:latest
    ports:
      - "4005:4005"
    depends_on:
      - auth-service-db
    networks:
      - internal
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-service-db:5432/authdb
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      JWT_SECRET: dGVzdFNlY3JldHRlc3RTZWNyZXR0ZXN0U2VjcmV0dGVzdFNlY3JldA==
      JWT_EXPIRATION: 3600000 # 1 hour in milliseconds

  auth-service-db:
    container_name: auth-service-db
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: authdb
    networks:
      - internal
    volumes:
      - ./pgdata_auth:/var/lib/postgresql/data

  api-gateway:
    container_name: api-gateway
    image: api-gateway:latest
    ports:
      - "4100:4100"
    networks:
      - internal
    depends_on:
      - patient-service
      - billing-service
      - analytics-service
      - notification-service

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9094:9094"
    networks:
      - internal
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://localhost:9093,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
     
networks:
  internal:
    driver: bridge

volumes:
  pgdata: